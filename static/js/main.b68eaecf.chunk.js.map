{"version":3,"sources":["components/Footer.js","components/Hero.js","pages/HomePage.js","pages/AboutPage.js","pages/ContactPage.js","pages/ProjectsPage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subtitle","text","HomePage","AboutPage","ContactPage","ProjectsPage","App","state","headerLinks","path","home","about","projects","contact","background","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","to","exact","render","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b68eaecf.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className='mt-5'>\r\n            <Container fluid={true}>\r\n                <Row className='border-top justify-content-between p-3'>\r\n                    <Col className='p-0' md={3} sm={12}>Ambu Karthik</Col>\r\n                    <Col className='p-0 d-flex justify-content-end' md={3}>This site belongs to Ambu Karthik</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );    \r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <Jumbotron className='bg-transparent jumbotron-fluid p-0'>\r\n            <Container fluid={true}>\r\n                <Row className='justify-content-center py-5'>\r\n                    <Col md={8} sm={12}>\r\n                        <h1 className='display-1 font-weight-bolder'>{props.title}</h1>\r\n                        <h3 className='display-4 font-weight-light'>{props.subtitle}</h3>\r\n                        <p className='lead font-weight-light'>{props.text}</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nimport Hero from '../components/Hero'\r\n\r\nfunction HomePage(props) {\r\n    return(\r\n        <Hero title={props.title} subtitle={props.subtitle} text={props.text}/>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nimport Hero from '../components/Hero'\r\n\r\nfunction AboutPage(props) {\r\n    return(\r\n        <Hero title={props.title} subtitle={props.subtitle} text={props.text}/>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nimport Hero from '../components/Hero';\r\n\r\nfunction ContactPage(props) {\r\n    return(\r\n        <Hero title={props.title} subtitle={props.subtitle} text={props.text}/>\r\n    );\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nimport Hero from '../components/Hero';\r\n\r\nfunction ProjectsPage(props) {\r\n    return(\r\n        <Hero title={props.title} subtitle={props.subtitle} text={props.text}/>\r\n    );\r\n}\r\n\r\nexport default ProjectsPage;","import React from 'react';\nimport {BrowserRouter as Router, Route, Link, Redirect} from 'react-router-dom';\nimport Container from 'react-bootstrap/Container'\nimport NavBar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport './App.css';\n\nimport Footer from './components/Footer'\nimport HomePage from './pages/HomePage'\nimport AboutPage from './pages/AboutPage'\nimport ContactPage from './pages/ContactPage'\nimport ProjectsPage from './pages/ProjectsPage'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Ambu Karthik', \n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about' },\n        { title: 'Projects', path: '/projects' },\n        { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Ambu Karthik'\n      },\n      about: {\n        title: 'Hi there',\n        text: 'I am Ambu Karthik'\n      },\n      projects: {\n        title: 'My projects'\n      },\n      contact: {\n        title: 'Contact me'\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container className='p-0' fluid={true}>\n\n            <NavBar className='border-bottom' background='transparent' expand='lg'>\n              <NavBar.Brand>Ambu Karthik</NavBar.Brand>\n              <NavBar.Toggle aria-controls='navbar-toggle'/>\n              <NavBar.Collapse id='navbar-toggle'>\n                <Nav className='ml-auto'>\n                  <Link className='nav-link' to='/portfolio'>Home</Link>\n                  <Link className='nav-link' to='/portfolio/about'>About</Link>\n                  <Link className='nav-link' to='/portfolio/projects'>Projects</Link>\n                  <Link className='nav-link' to='/portfolio/contact'>Contact</Link>\n                </Nav>\n              </NavBar.Collapse>\n            </NavBar>\n\n            <Route path='/'>\n              <Redirect to=\"/portfolio\" />\n            </Route>\n            <Route path='/portfolio' exact render={() => <HomePage title={this.state.home.title}/>}/>\n            <Route path='/portfolio/about' exact render={() => <AboutPage title={this.state.about.title} text={this.state.about.text}/>}/>\n            <Route path='/portfolio/contact' exact render={() => <ContactPage title={this.state.contact.title}/>}/>\n            <Route path='/portfolio/projects' exact render={() => <ProjectsPage title={this.state.projects.title}/>}/>\n\n            <Footer/>\n        </Container>\n      </Router>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}